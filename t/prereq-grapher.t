#!perl

use strict;
use warnings;

use App::PrereqGrapher;
use Test::More;
use FindBin 0.05;
use File::Spec::Functions;
use Devel::FindPerl qw(find_perl_interpreter);

{
    my $test_file = 'example3.dot';
    my $base_file = 't/base/module-path.dot';

    my $PERL = find_perl_interpreter() || die "can't find perl!\n";
    my $GRAPHER = catfile( $FindBin::Bin, updir(), qw(bin prereq-grapher) );

    system("$PERL", "$GRAPHER", "-o", "$test_file", "-dot", "Module::Path" );

    my $fh;
    my @test;

    # read in test output file

    open $fh, '<', $test_file or die $!;

    while (<$fh>){
        chomp;
        next if /Generated by Graph/;
        next if /^$/;
        push @test, $_;
    }
    close $fh;

    # read in base data file
    open $fh, '<', $base_file or die $!;

    my $base_count = 0;

    while (my $line = <$fh>){
        chomp $line;
        next if $line =~ /Generated by Graph/;
        next if $line =~ /^$/;
        $base_count++;

        my @items = grep {$line eq $_} @test;
        is (@items, 1, "$line is in the test file");
    }
    close $fh;

    is (@test, $base_count, "both files have the same num of lines");

    chmod(0600, $test_file);
    ok(unlink($test_file), "remove graph after running test");
}

done_testing();
